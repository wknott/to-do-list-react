{"version":3,"sources":["Tasks/done.svg","Tasks/delete.svg","Header/index.js","Form/styled.js","Form/index.js","Buttons/styled.js","Buttons/index.js","Tasks/styled.js","Tasks/index.js","Section/styled.js","Section/index.js","Container/styled.js","Container/index.js","GlobalStyle.js","theme.js","App.js","useTasks.js","serviceWorker.js","index.js"],"names":["module","exports","Header","title","StyledForm","styled","form","theme","breakpoints","mobile","Input","input","colors","secondary","Button","button","primary","hoverPrimary","activePrimary","Form","addTask","useState","newTaskName","setNewTaskName","inputRef","useRef","onSubmit","event","preventDefault","nameWithoutWhitespace","trim","current","focus","value","placeholder","autoFocus","onChange","target","ref","ButtonsContainer","div","Buttons","directionOfSort","hideDoneTasks","tasks","togglehHideDoneTasks","markAllTasksAsDone","sortTasks","length","onClick","disabled","every","done","TasksList","ul","Item","li","hide","css","ToggleDoneButton","DeleteButton","Content","p","Tasks","removeTask","toggleTaskDone","map","id","name","key","height","src","doneImage","alt","deleteImage","StyledSection","section","SectionHeader","header","Title","h2","Section","extraHeaderContent","sectionBody","ContainerMain","main","Container","children","GlobalStyle","createGlobalStyle","text","background","defaultTheme","App","setHideDoneTasks","JSON","parse","localStorage","getItem","setTasks","setDirectionOfSort","getHighestId","Math","max","useEffect","setItem","stringify","filter","task","sort","a","b","localeCompare","useTasks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.05c39ca0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/done.8768eed0.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.889d8b6f.svg\";","import React from 'react';\r\n\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <h1>\r\n      {title}\r\n    </h1>\r\n  </header>\r\n)\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 10px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  transition: background 0.3s, transform 0.3s;\r\n  \r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.hoverPrimary};\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &:active {\r\n    background-color: ${({ theme }) => theme.colors.activePrimary};\r\n  }\r\n`;","import React, { useState, useRef } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addTask }) => {\r\n  const [newTaskName, setNewTaskName] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  }\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const nameWithoutWhitespace = newTaskName.trim();\r\n    if (nameWithoutWhitespace) {\r\n      addTask(nameWithoutWhitespace);\r\n      setNewTaskName(\"\");\r\n    }\r\n    focusInput();\r\n  }\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        value={newTaskName}\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        autoFocus\r\n        onChange={({ target }) => setNewTaskName(target.value)}\r\n        ref={inputRef}\r\n      />\r\n      <Button>Dodaj zadanie</Button>\r\n    </StyledForm>\r\n  )\r\n}\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    display: grid;\r\n    grid-gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 0 10px;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  transition: 0.5s;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.colors.hoverPrimary};\r\n  }\r\n\r\n  &:active {\r\n    color: ${({ theme }) => theme.colors.activePrimary};\r\n  }\r\n\r\n  &:disabled {\r\n    color: ${({ theme }) => theme.colors.secondary};\r\n  }\r\n`;","import React from \"react\";\r\nimport { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ directionOfSort, hideDoneTasks, tasks, togglehHideDoneTasks, markAllTasksAsDone, sortTasks }) => (\r\n  <ButtonsContainer>\r\n    {tasks.length > 0 &&\r\n      <>\r\n        <Button onClick={sortTasks}>\r\n          Posortuj zadania {directionOfSort === null ? \"\" : directionOfSort === \"asc\" ? \"↓\" : \"↑\"}\r\n        </Button>\r\n        <Button onClick={togglehHideDoneTasks}>\r\n          {hideDoneTasks ? \"Pokaż ukończone\" : \"Ukryj ukończone\"}\r\n        </Button>\r\n        <Button\r\n          onClick={markAllTasksAsDone}\r\n          disabled={tasks.every(({ done }) => done)}\r\n        >\r\n          Ukończ wszystkie\r\n        </Button>\r\n      </>\r\n    }\r\n  </ButtonsContainer>\r\n)\r\n\r\nexport default Buttons;","import styled, { css } from \"styled-components\";\r\n\r\nexport const TasksList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 20px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  padding: 5px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  ${({ hide }) => hide && css`\r\n    display: none;\r\n  `}\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  padding: 10px;\r\n  height: 35px;\r\n  flex: 0 0 35px;\r\n  transition: 0.5s;\r\n`;\r\n\r\nexport const ToggleDoneButton = styled(Button)`\r\n  background-color: hsl(120, 100%, 25%);\r\n\r\n  &:hover {\r\n    background-color: hsl(120, 100%, 30%);\r\n  }\r\n\r\n  &:active {\r\n    background-color: hsl(120, 100%, 35%);\r\n  }\r\n`;\r\n\r\nexport const DeleteButton = styled(Button)`\r\n  background-color: hsl(0, 100%, 50%);\r\n\r\n  &:hover {\r\n    background-color: hsl(0, 100%, 60%);\r\n  }\r\n\r\n  &:active {\r\n    background-color: hsl(0, 100%, 70%);\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  padding: 5px 10px;\r\n  margin: 0px;\r\n  flex-grow: 1;\r\n`;","import React from \"react\";\r\nimport { TasksList, Item, ToggleDoneButton, DeleteButton, Content } from \"./styled\";\r\nimport doneImage from \"./done.svg\";\r\nimport deleteImage from \"./delete.svg\";\r\n\r\nconst Tasks = ({ tasks, hideDoneTasks, removeTask, toggleTaskDone }) => (\r\n  <TasksList>\r\n    {tasks.map(({ id, name, done }) => (\r\n      <Item\r\n        key={id}\r\n        hide={hideDoneTasks && done}\r\n      >\r\n        <ToggleDoneButton onClick={() => toggleTaskDone(id)}>\r\n          {done && <img height={15} src={doneImage} alt=\"done\" />}\r\n        </ToggleDoneButton>\r\n        <Content>\r\n          {done ? <s>{name}</s> : name}\r\n        </Content>\r\n        <DeleteButton onClick={() => removeTask(id)}>\r\n          <img height={15} src={deleteImage} alt=\"delete\" />\r\n        </DeleteButton>\r\n      </Item>\r\n    ))}\r\n  </TasksList>\r\n)\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n  background-color: white;\r\n  margin-bottom: 10px;\r\n  box-shadow: 0px 0px 2px 2px solid ${({ theme }) => theme.colors.secondary};\r\n`;\r\n\r\nexport const SectionHeader = styled.header`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 10px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 20px;\r\n  margin: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledSection, SectionHeader, Title } from \"./styled\";\r\n\r\nconst Section = ({ title, extraHeaderContent, sectionBody }) => (\r\n  <StyledSection>\r\n    <SectionHeader>\r\n      <Title>\r\n        {title}\r\n      </Title>\r\n      {extraHeaderContent}\r\n    </SectionHeader>\r\n    {sectionBody}\r\n  </StyledSection>\r\n)\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const ContainerMain = styled.main`\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;","import React from \"react\";\r\nimport { ContainerMain } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n  <ContainerMain>\r\n    {children}\r\n  </ContainerMain>\r\n)\r\n\r\nexport default Container;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: \"Lato\", sans-serif;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n  }\r\n`;","export const defaultTheme = {\r\n  colors: {\r\n    primary: \"hsl(180, 100%, 25%)\",\r\n    hoverPrimary: \"hsl(180, 100%, 30%)\",\r\n    activePrimary: \"hsl(180, 100%, 35%)\",\r\n    secondary: \"#ddd\",\r\n    text: \"#222\",\r\n    background: \"#eee\",\r\n  },\r\n  breakpoints: {\r\n    mobile: 767,\r\n  }\r\n};","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Buttons from \"./Buttons\";\nimport Tasks from \"./Tasks\";\nimport Section from \"./Section\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./useTasks\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport { defaultTheme } from \"./theme\";\nconst App = () => {\n  const [hideDoneTasks, setHideDoneTasks] = useState(false);\n\n  const togglehHideDoneTasks = () => {\n    setHideDoneTasks(!hideDoneTasks);\n  };\n\n  const {\n    tasks,\n    directionOfSort,\n    addTask,\n    removeTask,\n    toggleTaskDone,\n    markAllTasksAsDone,\n    sortTasks\n  } = useTasks();\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container>\n        <GlobalStyle />\n        <Header title=\"Lista zadań\" />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          sectionBody={<Form addTask={addTask} />}\n        />\n        <Section\n          title=\"Lista zadań\"\n          extraHeaderContent={\n            <Buttons\n              directionOfSort={directionOfSort}\n              hideDoneTasks={hideDoneTasks}\n              tasks={tasks}\n              togglehHideDoneTasks={togglehHideDoneTasks}\n              markAllTasksAsDone={markAllTasksAsDone}\n              sortTasks={sortTasks}\n            />\n          }\n          sectionBody={\n            <Tasks\n              tasks={tasks}\n              hideDoneTasks={hideDoneTasks}\n              removeTask={removeTask}\n              toggleTaskDone={toggleTaskDone}\n            />\n          }\n        />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\")) || []);\r\n  const [directionOfSort, setDirectionOfSort] = useState(null);\r\n  const getHighestId = () => Math.max(...tasks.map(({ id }) => id));\r\n\r\n  const addTask = (name) => {\r\n    setTasks(tasks => [\r\n      ...tasks,\r\n      {\r\n        id: tasks.length ? getHighestId() + 1 : 1,\r\n        name,\r\n        done: false,\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      return task.id === id ? ({\r\n        ...task,\r\n        done: !task.done\r\n      }) : (task);\r\n    }));\r\n  };\r\n\r\n  const markAllTasksAsDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task,\r\n      done: true,\r\n    })));\r\n  };\r\n\r\n  const sortTasks = () => {\r\n    setDirectionOfSort(directionOfSort === \"asc\" ? \"desc\" : \"asc\");\r\n    setTasks(tasks => [...tasks].sort(\r\n      (a, b) => directionOfSort === \"asc\" ? b.name.localeCompare(a.name) : a.name.localeCompare(b.name)\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  return {\r\n    tasks,\r\n    directionOfSort,\r\n    addTask,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    markAllTasksAsDone,\r\n    sortTasks\r\n  };\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}